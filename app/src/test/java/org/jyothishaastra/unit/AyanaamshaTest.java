/*
 * This source file was generated by the Gradle 'init' task
 */
package org.jyothishaastra.unit;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.jyothishaastra.Ayanaamsha;
import org.jyothishaastra.DegMinSec;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Calendar;
import java.util.stream.Stream;

class AyanaamshaTest {

	private static Stream<Arguments> swissEphIndChandra() {
		// Chandra
		return Stream.of(
			//( day, sayyana from Swiss, niraaya from Ind, raashi from Swiss )
			Arguments.of(1, new int[]{ 27, 42, 0 }, new int[]{ 183, 42, 28 }, 7), //, actual 13 }
			Arguments.of(2, new int[]{ 10, 22, 0 }, new int[]{ 196, 22, 27 }, 8), //, 21, 33 }

			Arguments.of(20, new int[]{ 27, 36, 0 }, new int[]{ 63, 36, 25 }, 3) //, 36, 41 }
		);
	}

	private static Stream<Arguments> swissEphIndSoorya() {

		// Soorya
	   return Stream.of(
			//( day, sayyana from Swiss, niraaya from Ind, raashi from Swiss )
			Arguments.of(1, new int[]{ 9, 18, 42 }, new int[]{ 75, 19, 10 }, 4), //, actual 1 }
			Arguments.of(2, new int[]{ 10, 15, 54 }, new int[]{ 76, 16, 21 }, 4), //, 13 }
			Arguments.of(3, new int[]{ 11, 13, 06 }, new int[]{ 77, 13, 33 }, 4), //, 24 }

			Arguments.of(20, new int[]{ 27, 25, 46 }, new int[]{ 93, 26, 11 }, 4) //, 2 }
		);
	}

	@ParameterizedTest
	@MethodSource("swissEphIndSoorya")
	@MethodSource("swissEphIndChandra")
	void ayanamshaData(int day, int []sayyana, int[] nirayaana, int raashi) throws Exception {

		Calendar date = Calendar.getInstance();
		date.set(2009, 6, day); // for 15 July 2009

		double ayanamsha = Ayanaamsha.ayanamsha(date);

		sayyana[0] = DegMinSec.absGeo(raashi, sayyana);
		int surNir[] = DegMinSec.getGeoCoordsFromDegree(Ayanaamsha.nirayaana(ayanamsha, sayyana));
		assertArrayEquals(nirayaana, surNir);
	}
}
